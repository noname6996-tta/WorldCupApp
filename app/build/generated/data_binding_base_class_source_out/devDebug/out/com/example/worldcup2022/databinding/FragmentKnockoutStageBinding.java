// Generated by view binder compiler. Do not edit!
package com.example.worldcup2022.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.worldcup2022.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentKnockoutStageBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final LinearLayout layout12Final;

  @NonNull
  public final LinearLayout layout12Final2;

  @NonNull
  public final LinearLayout layout14Final1;

  @NonNull
  public final LinearLayout layout14Final2;

  @NonNull
  public final LinearLayout layout18Final1;

  @NonNull
  public final LinearLayout layout18Final2;

  @NonNull
  public final LinearLayout layout18Final3;

  @NonNull
  public final LinearLayout layout18Final4;

  @NonNull
  public final LinearLayout linearLayout2;

  @NonNull
  public final LinearLayout linearLayout3;

  @NonNull
  public final LinearLayout linearLayout4;

  @NonNull
  public final LinearLayout linearLayout5;

  @NonNull
  public final LinearLayout linearLayout6;

  @NonNull
  public final View view13;

  @NonNull
  public final View view14;

  @NonNull
  public final View view15;

  @NonNull
  public final View view16;

  @NonNull
  public final View view17;

  @NonNull
  public final View view18;

  @NonNull
  public final View view19;

  @NonNull
  public final View view20;

  @NonNull
  public final View view21;

  @NonNull
  public final View view22;

  @NonNull
  public final View view23;

  @NonNull
  public final View view24;

  @NonNull
  public final View view25;

  @NonNull
  public final View view26;

  @NonNull
  public final View view27;

  @NonNull
  public final View view28;

  @NonNull
  public final View view29;

  @NonNull
  public final View view30;

  @NonNull
  public final View view31;

  @NonNull
  public final View view32;

  @NonNull
  public final View view33;

  @NonNull
  public final View view34;

  @NonNull
  public final View view35;

  @NonNull
  public final View view36;

  @NonNull
  public final View view37;

  @NonNull
  public final View view38;

  @NonNull
  public final View view39;

  @NonNull
  public final View viewA1B2;

  @NonNull
  public final View viewC1D2;

  @NonNull
  public final View viewE1F2;

  @NonNull
  public final View viewG1H2;

  private FragmentKnockoutStageBinding(@NonNull ConstraintLayout rootView,
      @NonNull LinearLayout layout12Final, @NonNull LinearLayout layout12Final2,
      @NonNull LinearLayout layout14Final1, @NonNull LinearLayout layout14Final2,
      @NonNull LinearLayout layout18Final1, @NonNull LinearLayout layout18Final2,
      @NonNull LinearLayout layout18Final3, @NonNull LinearLayout layout18Final4,
      @NonNull LinearLayout linearLayout2, @NonNull LinearLayout linearLayout3,
      @NonNull LinearLayout linearLayout4, @NonNull LinearLayout linearLayout5,
      @NonNull LinearLayout linearLayout6, @NonNull View view13, @NonNull View view14,
      @NonNull View view15, @NonNull View view16, @NonNull View view17, @NonNull View view18,
      @NonNull View view19, @NonNull View view20, @NonNull View view21, @NonNull View view22,
      @NonNull View view23, @NonNull View view24, @NonNull View view25, @NonNull View view26,
      @NonNull View view27, @NonNull View view28, @NonNull View view29, @NonNull View view30,
      @NonNull View view31, @NonNull View view32, @NonNull View view33, @NonNull View view34,
      @NonNull View view35, @NonNull View view36, @NonNull View view37, @NonNull View view38,
      @NonNull View view39, @NonNull View viewA1B2, @NonNull View viewC1D2, @NonNull View viewE1F2,
      @NonNull View viewG1H2) {
    this.rootView = rootView;
    this.layout12Final = layout12Final;
    this.layout12Final2 = layout12Final2;
    this.layout14Final1 = layout14Final1;
    this.layout14Final2 = layout14Final2;
    this.layout18Final1 = layout18Final1;
    this.layout18Final2 = layout18Final2;
    this.layout18Final3 = layout18Final3;
    this.layout18Final4 = layout18Final4;
    this.linearLayout2 = linearLayout2;
    this.linearLayout3 = linearLayout3;
    this.linearLayout4 = linearLayout4;
    this.linearLayout5 = linearLayout5;
    this.linearLayout6 = linearLayout6;
    this.view13 = view13;
    this.view14 = view14;
    this.view15 = view15;
    this.view16 = view16;
    this.view17 = view17;
    this.view18 = view18;
    this.view19 = view19;
    this.view20 = view20;
    this.view21 = view21;
    this.view22 = view22;
    this.view23 = view23;
    this.view24 = view24;
    this.view25 = view25;
    this.view26 = view26;
    this.view27 = view27;
    this.view28 = view28;
    this.view29 = view29;
    this.view30 = view30;
    this.view31 = view31;
    this.view32 = view32;
    this.view33 = view33;
    this.view34 = view34;
    this.view35 = view35;
    this.view36 = view36;
    this.view37 = view37;
    this.view38 = view38;
    this.view39 = view39;
    this.viewA1B2 = viewA1B2;
    this.viewC1D2 = viewC1D2;
    this.viewE1F2 = viewE1F2;
    this.viewG1H2 = viewG1H2;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentKnockoutStageBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentKnockoutStageBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_knockout_stage, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentKnockoutStageBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.layout1_2Final;
      LinearLayout layout12Final = ViewBindings.findChildViewById(rootView, id);
      if (layout12Final == null) {
        break missingId;
      }

      id = R.id.layout1_2Final2;
      LinearLayout layout12Final2 = ViewBindings.findChildViewById(rootView, id);
      if (layout12Final2 == null) {
        break missingId;
      }

      id = R.id.layout1_4Final1;
      LinearLayout layout14Final1 = ViewBindings.findChildViewById(rootView, id);
      if (layout14Final1 == null) {
        break missingId;
      }

      id = R.id.layout1_4Final2;
      LinearLayout layout14Final2 = ViewBindings.findChildViewById(rootView, id);
      if (layout14Final2 == null) {
        break missingId;
      }

      id = R.id.layout1_8Final1;
      LinearLayout layout18Final1 = ViewBindings.findChildViewById(rootView, id);
      if (layout18Final1 == null) {
        break missingId;
      }

      id = R.id.layout1_8Final2;
      LinearLayout layout18Final2 = ViewBindings.findChildViewById(rootView, id);
      if (layout18Final2 == null) {
        break missingId;
      }

      id = R.id.layout1_8Final3;
      LinearLayout layout18Final3 = ViewBindings.findChildViewById(rootView, id);
      if (layout18Final3 == null) {
        break missingId;
      }

      id = R.id.layout1_8Final4;
      LinearLayout layout18Final4 = ViewBindings.findChildViewById(rootView, id);
      if (layout18Final4 == null) {
        break missingId;
      }

      id = R.id.linearLayout2;
      LinearLayout linearLayout2 = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout2 == null) {
        break missingId;
      }

      id = R.id.linearLayout3;
      LinearLayout linearLayout3 = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout3 == null) {
        break missingId;
      }

      id = R.id.linearLayout4;
      LinearLayout linearLayout4 = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout4 == null) {
        break missingId;
      }

      id = R.id.linearLayout5;
      LinearLayout linearLayout5 = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout5 == null) {
        break missingId;
      }

      id = R.id.linearLayout6;
      LinearLayout linearLayout6 = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout6 == null) {
        break missingId;
      }

      id = R.id.view13;
      View view13 = ViewBindings.findChildViewById(rootView, id);
      if (view13 == null) {
        break missingId;
      }

      id = R.id.view14;
      View view14 = ViewBindings.findChildViewById(rootView, id);
      if (view14 == null) {
        break missingId;
      }

      id = R.id.view15;
      View view15 = ViewBindings.findChildViewById(rootView, id);
      if (view15 == null) {
        break missingId;
      }

      id = R.id.view16;
      View view16 = ViewBindings.findChildViewById(rootView, id);
      if (view16 == null) {
        break missingId;
      }

      id = R.id.view17;
      View view17 = ViewBindings.findChildViewById(rootView, id);
      if (view17 == null) {
        break missingId;
      }

      id = R.id.view18;
      View view18 = ViewBindings.findChildViewById(rootView, id);
      if (view18 == null) {
        break missingId;
      }

      id = R.id.view19;
      View view19 = ViewBindings.findChildViewById(rootView, id);
      if (view19 == null) {
        break missingId;
      }

      id = R.id.view20;
      View view20 = ViewBindings.findChildViewById(rootView, id);
      if (view20 == null) {
        break missingId;
      }

      id = R.id.view21;
      View view21 = ViewBindings.findChildViewById(rootView, id);
      if (view21 == null) {
        break missingId;
      }

      id = R.id.view22;
      View view22 = ViewBindings.findChildViewById(rootView, id);
      if (view22 == null) {
        break missingId;
      }

      id = R.id.view23;
      View view23 = ViewBindings.findChildViewById(rootView, id);
      if (view23 == null) {
        break missingId;
      }

      id = R.id.view24;
      View view24 = ViewBindings.findChildViewById(rootView, id);
      if (view24 == null) {
        break missingId;
      }

      id = R.id.view25;
      View view25 = ViewBindings.findChildViewById(rootView, id);
      if (view25 == null) {
        break missingId;
      }

      id = R.id.view26;
      View view26 = ViewBindings.findChildViewById(rootView, id);
      if (view26 == null) {
        break missingId;
      }

      id = R.id.view27;
      View view27 = ViewBindings.findChildViewById(rootView, id);
      if (view27 == null) {
        break missingId;
      }

      id = R.id.view28;
      View view28 = ViewBindings.findChildViewById(rootView, id);
      if (view28 == null) {
        break missingId;
      }

      id = R.id.view29;
      View view29 = ViewBindings.findChildViewById(rootView, id);
      if (view29 == null) {
        break missingId;
      }

      id = R.id.view30;
      View view30 = ViewBindings.findChildViewById(rootView, id);
      if (view30 == null) {
        break missingId;
      }

      id = R.id.view31;
      View view31 = ViewBindings.findChildViewById(rootView, id);
      if (view31 == null) {
        break missingId;
      }

      id = R.id.view32;
      View view32 = ViewBindings.findChildViewById(rootView, id);
      if (view32 == null) {
        break missingId;
      }

      id = R.id.view33;
      View view33 = ViewBindings.findChildViewById(rootView, id);
      if (view33 == null) {
        break missingId;
      }

      id = R.id.view34;
      View view34 = ViewBindings.findChildViewById(rootView, id);
      if (view34 == null) {
        break missingId;
      }

      id = R.id.view35;
      View view35 = ViewBindings.findChildViewById(rootView, id);
      if (view35 == null) {
        break missingId;
      }

      id = R.id.view36;
      View view36 = ViewBindings.findChildViewById(rootView, id);
      if (view36 == null) {
        break missingId;
      }

      id = R.id.view37;
      View view37 = ViewBindings.findChildViewById(rootView, id);
      if (view37 == null) {
        break missingId;
      }

      id = R.id.view38;
      View view38 = ViewBindings.findChildViewById(rootView, id);
      if (view38 == null) {
        break missingId;
      }

      id = R.id.view39;
      View view39 = ViewBindings.findChildViewById(rootView, id);
      if (view39 == null) {
        break missingId;
      }

      id = R.id.viewA1B2;
      View viewA1B2 = ViewBindings.findChildViewById(rootView, id);
      if (viewA1B2 == null) {
        break missingId;
      }

      id = R.id.viewC1D2;
      View viewC1D2 = ViewBindings.findChildViewById(rootView, id);
      if (viewC1D2 == null) {
        break missingId;
      }

      id = R.id.viewE1F2;
      View viewE1F2 = ViewBindings.findChildViewById(rootView, id);
      if (viewE1F2 == null) {
        break missingId;
      }

      id = R.id.viewG1H2;
      View viewG1H2 = ViewBindings.findChildViewById(rootView, id);
      if (viewG1H2 == null) {
        break missingId;
      }

      return new FragmentKnockoutStageBinding((ConstraintLayout) rootView, layout12Final,
          layout12Final2, layout14Final1, layout14Final2, layout18Final1, layout18Final2,
          layout18Final3, layout18Final4, linearLayout2, linearLayout3, linearLayout4,
          linearLayout5, linearLayout6, view13, view14, view15, view16, view17, view18, view19,
          view20, view21, view22, view23, view24, view25, view26, view27, view28, view29, view30,
          view31, view32, view33, view34, view35, view36, view37, view38, view39, viewA1B2,
          viewC1D2, viewE1F2, viewG1H2);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
