// Generated by view binder compiler. Do not edit!
package com.example.worldcup2022.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.HorizontalScrollView;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.worldcup2022.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityBeautyMagicBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final TextView bgchangeView;

  @NonNull
  public final ImageView imgViewBeauty;

  @NonNull
  public final TextView rcAdjust;

  @NonNull
  public final TextView rcBrush;

  @NonNull
  public final TextView rcCrop;

  @NonNull
  public final TextView rcDispersion;

  @NonNull
  public final TextView rcDrip;

  @NonNull
  public final TextView rcFrame;

  @NonNull
  public final TextView rcSky;

  @NonNull
  public final TextView rcSpiral;

  @NonNull
  public final TextView rcSticker;

  @NonNull
  public final HorizontalScrollView rlViewBottom;

  private ActivityBeautyMagicBinding(@NonNull RelativeLayout rootView,
      @NonNull TextView bgchangeView, @NonNull ImageView imgViewBeauty, @NonNull TextView rcAdjust,
      @NonNull TextView rcBrush, @NonNull TextView rcCrop, @NonNull TextView rcDispersion,
      @NonNull TextView rcDrip, @NonNull TextView rcFrame, @NonNull TextView rcSky,
      @NonNull TextView rcSpiral, @NonNull TextView rcSticker,
      @NonNull HorizontalScrollView rlViewBottom) {
    this.rootView = rootView;
    this.bgchangeView = bgchangeView;
    this.imgViewBeauty = imgViewBeauty;
    this.rcAdjust = rcAdjust;
    this.rcBrush = rcBrush;
    this.rcCrop = rcCrop;
    this.rcDispersion = rcDispersion;
    this.rcDrip = rcDrip;
    this.rcFrame = rcFrame;
    this.rcSky = rcSky;
    this.rcSpiral = rcSpiral;
    this.rcSticker = rcSticker;
    this.rlViewBottom = rlViewBottom;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityBeautyMagicBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityBeautyMagicBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_beauty_magic, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityBeautyMagicBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bgchangeView;
      TextView bgchangeView = ViewBindings.findChildViewById(rootView, id);
      if (bgchangeView == null) {
        break missingId;
      }

      id = R.id.imgViewBeauty;
      ImageView imgViewBeauty = ViewBindings.findChildViewById(rootView, id);
      if (imgViewBeauty == null) {
        break missingId;
      }

      id = R.id.rcAdjust;
      TextView rcAdjust = ViewBindings.findChildViewById(rootView, id);
      if (rcAdjust == null) {
        break missingId;
      }

      id = R.id.rcBrush;
      TextView rcBrush = ViewBindings.findChildViewById(rootView, id);
      if (rcBrush == null) {
        break missingId;
      }

      id = R.id.rcCrop;
      TextView rcCrop = ViewBindings.findChildViewById(rootView, id);
      if (rcCrop == null) {
        break missingId;
      }

      id = R.id.rcDispersion;
      TextView rcDispersion = ViewBindings.findChildViewById(rootView, id);
      if (rcDispersion == null) {
        break missingId;
      }

      id = R.id.rcDrip;
      TextView rcDrip = ViewBindings.findChildViewById(rootView, id);
      if (rcDrip == null) {
        break missingId;
      }

      id = R.id.rcFrame;
      TextView rcFrame = ViewBindings.findChildViewById(rootView, id);
      if (rcFrame == null) {
        break missingId;
      }

      id = R.id.rcSky;
      TextView rcSky = ViewBindings.findChildViewById(rootView, id);
      if (rcSky == null) {
        break missingId;
      }

      id = R.id.rcSpiral;
      TextView rcSpiral = ViewBindings.findChildViewById(rootView, id);
      if (rcSpiral == null) {
        break missingId;
      }

      id = R.id.rcSticker;
      TextView rcSticker = ViewBindings.findChildViewById(rootView, id);
      if (rcSticker == null) {
        break missingId;
      }

      id = R.id.rlViewBottom;
      HorizontalScrollView rlViewBottom = ViewBindings.findChildViewById(rootView, id);
      if (rlViewBottom == null) {
        break missingId;
      }

      return new ActivityBeautyMagicBinding((RelativeLayout) rootView, bgchangeView, imgViewBeauty,
          rcAdjust, rcBrush, rcCrop, rcDispersion, rcDrip, rcFrame, rcSky, rcSpiral, rcSticker,
          rlViewBottom);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
