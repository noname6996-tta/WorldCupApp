// Generated by view binder compiler. Do not edit!
package com.example.worldcup2022.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.worldcup2022.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentAllgroupBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView imgGroupA;

  @NonNull
  public final ImageView imgGroupB;

  @NonNull
  public final ImageView imgGroupC;

  @NonNull
  public final ImageView imgGroupD;

  @NonNull
  public final ImageView imgGroupE;

  @NonNull
  public final ImageView imgGroupF;

  @NonNull
  public final ImageView imgGroupG;

  @NonNull
  public final ImageView imgGroupH;

  private FragmentAllgroupBinding(@NonNull ConstraintLayout rootView, @NonNull ImageView imgGroupA,
      @NonNull ImageView imgGroupB, @NonNull ImageView imgGroupC, @NonNull ImageView imgGroupD,
      @NonNull ImageView imgGroupE, @NonNull ImageView imgGroupF, @NonNull ImageView imgGroupG,
      @NonNull ImageView imgGroupH) {
    this.rootView = rootView;
    this.imgGroupA = imgGroupA;
    this.imgGroupB = imgGroupB;
    this.imgGroupC = imgGroupC;
    this.imgGroupD = imgGroupD;
    this.imgGroupE = imgGroupE;
    this.imgGroupF = imgGroupF;
    this.imgGroupG = imgGroupG;
    this.imgGroupH = imgGroupH;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentAllgroupBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentAllgroupBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_allgroup, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentAllgroupBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.imgGroupA;
      ImageView imgGroupA = ViewBindings.findChildViewById(rootView, id);
      if (imgGroupA == null) {
        break missingId;
      }

      id = R.id.imgGroupB;
      ImageView imgGroupB = ViewBindings.findChildViewById(rootView, id);
      if (imgGroupB == null) {
        break missingId;
      }

      id = R.id.imgGroupC;
      ImageView imgGroupC = ViewBindings.findChildViewById(rootView, id);
      if (imgGroupC == null) {
        break missingId;
      }

      id = R.id.imgGroupD;
      ImageView imgGroupD = ViewBindings.findChildViewById(rootView, id);
      if (imgGroupD == null) {
        break missingId;
      }

      id = R.id.imgGroupE;
      ImageView imgGroupE = ViewBindings.findChildViewById(rootView, id);
      if (imgGroupE == null) {
        break missingId;
      }

      id = R.id.imgGroupF;
      ImageView imgGroupF = ViewBindings.findChildViewById(rootView, id);
      if (imgGroupF == null) {
        break missingId;
      }

      id = R.id.imgGroupG;
      ImageView imgGroupG = ViewBindings.findChildViewById(rootView, id);
      if (imgGroupG == null) {
        break missingId;
      }

      id = R.id.imgGroupH;
      ImageView imgGroupH = ViewBindings.findChildViewById(rootView, id);
      if (imgGroupH == null) {
        break missingId;
      }

      return new FragmentAllgroupBinding((ConstraintLayout) rootView, imgGroupA, imgGroupB,
          imgGroupC, imgGroupD, imgGroupE, imgGroupF, imgGroupG, imgGroupH);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
