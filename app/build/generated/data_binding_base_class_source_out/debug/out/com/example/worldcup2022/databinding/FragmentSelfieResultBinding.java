// Generated by view binder compiler. Do not edit!
package com.example.worldcup2022.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.worldcup2022.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentSelfieResultBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView ivBack;

  @NonNull
  public final ImageView ivDownload;

  @NonNull
  public final ImageView ivImageResult;

  @NonNull
  public final ImageView ivShare;

  @NonNull
  public final TextView textView14;

  @NonNull
  public final TextView textView15;

  @NonNull
  public final TextView textView17;

  @NonNull
  public final View viewBack;

  private FragmentSelfieResultBinding(@NonNull ConstraintLayout rootView, @NonNull ImageView ivBack,
      @NonNull ImageView ivDownload, @NonNull ImageView ivImageResult, @NonNull ImageView ivShare,
      @NonNull TextView textView14, @NonNull TextView textView15, @NonNull TextView textView17,
      @NonNull View viewBack) {
    this.rootView = rootView;
    this.ivBack = ivBack;
    this.ivDownload = ivDownload;
    this.ivImageResult = ivImageResult;
    this.ivShare = ivShare;
    this.textView14 = textView14;
    this.textView15 = textView15;
    this.textView17 = textView17;
    this.viewBack = viewBack;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentSelfieResultBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentSelfieResultBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_selfie_result, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentSelfieResultBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.iv_back;
      ImageView ivBack = ViewBindings.findChildViewById(rootView, id);
      if (ivBack == null) {
        break missingId;
      }

      id = R.id.iv_download;
      ImageView ivDownload = ViewBindings.findChildViewById(rootView, id);
      if (ivDownload == null) {
        break missingId;
      }

      id = R.id.iv_image_result;
      ImageView ivImageResult = ViewBindings.findChildViewById(rootView, id);
      if (ivImageResult == null) {
        break missingId;
      }

      id = R.id.iv_share;
      ImageView ivShare = ViewBindings.findChildViewById(rootView, id);
      if (ivShare == null) {
        break missingId;
      }

      id = R.id.textView14;
      TextView textView14 = ViewBindings.findChildViewById(rootView, id);
      if (textView14 == null) {
        break missingId;
      }

      id = R.id.textView15;
      TextView textView15 = ViewBindings.findChildViewById(rootView, id);
      if (textView15 == null) {
        break missingId;
      }

      id = R.id.textView17;
      TextView textView17 = ViewBindings.findChildViewById(rootView, id);
      if (textView17 == null) {
        break missingId;
      }

      id = R.id.view_back;
      View viewBack = ViewBindings.findChildViewById(rootView, id);
      if (viewBack == null) {
        break missingId;
      }

      return new FragmentSelfieResultBinding((ConstraintLayout) rootView, ivBack, ivDownload,
          ivImageResult, ivShare, textView14, textView15, textView17, viewBack);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
