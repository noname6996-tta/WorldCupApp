// Generated by Dagger (https://dagger.dev).
package com.example.worldcup2022.di;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import kotlin.coroutines.CoroutineContext;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AppModule_ProvideCoroutineContextFactory implements Factory<CoroutineContext> {
  private final AppModule module;

  public AppModule_ProvideCoroutineContextFactory(AppModule module) {
    this.module = module;
  }

  @Override
  public CoroutineContext get() {
    return provideCoroutineContext(module);
  }

  public static AppModule_ProvideCoroutineContextFactory create(AppModule module) {
    return new AppModule_ProvideCoroutineContextFactory(module);
  }

  public static CoroutineContext provideCoroutineContext(AppModule instance) {
    return Preconditions.checkNotNullFromProvides(instance.provideCoroutineContext());
  }
}
