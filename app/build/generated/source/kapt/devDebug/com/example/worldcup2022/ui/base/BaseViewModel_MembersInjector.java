// Generated by Dagger (https://dagger.dev).
package com.example.worldcup2022.ui.base;

import com.example.worldcup2022.usecase.errors.ErrorManager;
import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class BaseViewModel_MembersInjector implements MembersInjector<BaseViewModel> {
  private final Provider<ErrorManager> errorManagerProvider;

  public BaseViewModel_MembersInjector(Provider<ErrorManager> errorManagerProvider) {
    this.errorManagerProvider = errorManagerProvider;
  }

  public static MembersInjector<BaseViewModel> create(Provider<ErrorManager> errorManagerProvider) {
    return new BaseViewModel_MembersInjector(errorManagerProvider);
  }

  @Override
  public void injectMembers(BaseViewModel instance) {
    injectErrorManager(instance, errorManagerProvider.get());
  }

  @InjectedFieldSignature("com.example.worldcup2022.ui.base.BaseViewModel.errorManager")
  public static void injectErrorManager(BaseViewModel instance, ErrorManager errorManager) {
    instance.errorManager = errorManager;
  }
}
