// Code generated by moshi-kotlin-codegen. Do not edit.
@file:Suppress("DEPRECATION", "unused", "ClassName", "REDUNDANT_PROJECTION",
    "RedundantExplicitType", "LocalVariableName", "RedundantVisibilityModifier",
    "PLATFORM_CLASS_MAPPED_TO_KOTLIN", "IMPLICIT_NOTHING_TYPE_ARGUMENT_IN_RETURN_POSITION")

package com.example.worldcup2022.`data`.dto.frames

import com.squareup.moshi.JsonAdapter
import com.squareup.moshi.JsonReader
import com.squareup.moshi.JsonWriter
import com.squareup.moshi.Moshi
import com.squareup.moshi.`internal`.Util
import java.lang.NullPointerException
import java.lang.reflect.Constructor
import kotlin.Int
import kotlin.String
import kotlin.Suppress
import kotlin.Unit
import kotlin.collections.emptySet
import kotlin.jvm.Volatile
import kotlin.text.buildString

public class DefinesFramesJsonAdapter(
  moshi: Moshi
) : JsonAdapter<DefinesFrames>() {
  private val options: JsonReader.Options = JsonReader.Options.of("start", "end",
      "totalCollageItemContainer", "indexDefineCollage")

  private val intAdapter: JsonAdapter<Int> = moshi.adapter(Int::class.java, emptySet(), "start")

  @Volatile
  private var constructorRef: Constructor<DefinesFrames>? = null

  public override fun toString(): String = buildString(35) {
      append("GeneratedJsonAdapter(").append("DefinesFrames").append(')') }

  public override fun fromJson(reader: JsonReader): DefinesFrames {
    var start: Int? = 0
    var end: Int? = 0
    var totalCollageItemContainer: Int? = 0
    var indexDefineCollage: Int? = 0
    var mask0 = -1
    reader.beginObject()
    while (reader.hasNext()) {
      when (reader.selectName(options)) {
        0 -> {
          start = intAdapter.fromJson(reader) ?: throw Util.unexpectedNull("start", "start", reader)
          // $mask = $mask and (1 shl 0).inv()
          mask0 = mask0 and 0xfffffffe.toInt()
        }
        1 -> {
          end = intAdapter.fromJson(reader) ?: throw Util.unexpectedNull("end", "end", reader)
          // $mask = $mask and (1 shl 1).inv()
          mask0 = mask0 and 0xfffffffd.toInt()
        }
        2 -> {
          totalCollageItemContainer = intAdapter.fromJson(reader) ?:
              throw Util.unexpectedNull("totalCollageItemContainer", "totalCollageItemContainer",
              reader)
          // $mask = $mask and (1 shl 2).inv()
          mask0 = mask0 and 0xfffffffb.toInt()
        }
        3 -> {
          indexDefineCollage = intAdapter.fromJson(reader) ?:
              throw Util.unexpectedNull("indexDefineCollage", "indexDefineCollage", reader)
          // $mask = $mask and (1 shl 3).inv()
          mask0 = mask0 and 0xfffffff7.toInt()
        }
        -1 -> {
          // Unknown name, skip it.
          reader.skipName()
          reader.skipValue()
        }
      }
    }
    reader.endObject()
    if (mask0 == 0xfffffff0.toInt()) {
      // All parameters with defaults are set, invoke the constructor directly
      return  DefinesFrames(
          start = start as Int,
          end = end as Int,
          totalCollageItemContainer = totalCollageItemContainer as Int,
          indexDefineCollage = indexDefineCollage as Int
      )
    } else {
      // Reflectively invoke the synthetic defaults constructor
      @Suppress("UNCHECKED_CAST")
      val localConstructor: Constructor<DefinesFrames> = this.constructorRef ?:
          DefinesFrames::class.java.getDeclaredConstructor(Int::class.javaPrimitiveType,
          Int::class.javaPrimitiveType, Int::class.javaPrimitiveType, Int::class.javaPrimitiveType,
          Int::class.javaPrimitiveType, Util.DEFAULT_CONSTRUCTOR_MARKER).also {
          this.constructorRef = it }
      return localConstructor.newInstance(
          start,
          end,
          totalCollageItemContainer,
          indexDefineCollage,
          mask0,
          /* DefaultConstructorMarker */ null
      )
    }
  }

  public override fun toJson(writer: JsonWriter, value_: DefinesFrames?): Unit {
    if (value_ == null) {
      throw NullPointerException("value_ was null! Wrap in .nullSafe() to write nullable values.")
    }
    writer.beginObject()
    writer.name("start")
    intAdapter.toJson(writer, value_.start)
    writer.name("end")
    intAdapter.toJson(writer, value_.end)
    writer.name("totalCollageItemContainer")
    intAdapter.toJson(writer, value_.totalCollageItemContainer)
    writer.name("indexDefineCollage")
    intAdapter.toJson(writer, value_.indexDefineCollage)
    writer.endObject()
  }
}
