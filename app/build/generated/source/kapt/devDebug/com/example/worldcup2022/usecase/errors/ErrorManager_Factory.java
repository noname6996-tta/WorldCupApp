// Generated by Dagger (https://dagger.dev).
package com.example.worldcup2022.usecase.errors;

import com.example.worldcup2022.data.error.mapper.ErrorMapper;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ErrorManager_Factory implements Factory<ErrorManager> {
  private final Provider<ErrorMapper> errorMapperProvider;

  public ErrorManager_Factory(Provider<ErrorMapper> errorMapperProvider) {
    this.errorMapperProvider = errorMapperProvider;
  }

  @Override
  public ErrorManager get() {
    return newInstance(errorMapperProvider.get());
  }

  public static ErrorManager_Factory create(Provider<ErrorMapper> errorMapperProvider) {
    return new ErrorManager_Factory(errorMapperProvider);
  }

  public static ErrorManager newInstance(ErrorMapper errorMapper) {
    return new ErrorManager(errorMapper);
  }
}
